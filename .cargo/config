[target.thumbv6m-none-eabi]
runner = 'arm-none-eabi-gdb'
rustflags = [
  "-C", "link-arg=-Wl,-Tlink.x",
  "-C", "link-arg=-nostartfiles",

  # uncomment to use rustc LLD to link programs (a)
  # "-C", "link-arg=-Tlink.x",
  # "-C", "linker=lld",
  # "-Z", "linker-flavor=ld.lld",
]

[target.thumbv7m-none-eabi]
runner = 'arm-none-eabi-gdb -q -x openocd.gdb'
rustflags = [
  #"-C", "link-arg=-Wl,-Tlink.x",
  #"-C", "link-arg=-nostartfiles",

  # uncomment to use rustc LLD to link programs (a)
  "-C", "link-arg=-Tlink.x",
  # "-C", "linker=lld",
  # "-Z", "linker-flavor=ld.lld",

  # "-C", "inline-threshold=225" # or 275 - increases inlining - may be needed when optimized for size - see https://rust-embedded.github.io/book/unsorted/speed-vs-size.html
]

[target.thumbv7em-none-eabi]
runner = 'arm-none-eabi-gdb'
rustflags = [
  "-C", "link-arg=-Wl,-Tlink.x",
  "-C", "link-arg=-nostartfiles",

  # uncomment to use rustc LLD to link programs (a)
  # "-C", "link-arg=-Tlink.x",
  # "-C", "linker=lld",
  # "-Z", "linker-flavor=ld.lld",
]

[target.thumbv7em-none-eabihf]
runner = 'arm-none-eabi-gdb'
rustflags = [
  "-C", "link-arg=-Wl,-Tlink.x",
  "-C", "link-arg=-nostartfiles",

  # uncomment to use rustc LLD to link programs (a)
  # "-C", "link-arg=-Tlink.x",
  # "-C", "linker=lld",
  # "-Z", "linker-flavor=ld.lld",
]

# (a) you also need to comment out the other two `link-arg` lines. But note that as of v0.6.0 LLD
# has a bug where it mislinks FFI calls and they up crashing the program at runtime

[build]
target = "thumbv7m-none-eabi"